/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P node will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.Asset;
import io.ownera.ledger.adapter.api.model.Destination;
import io.ownera.ledger.adapter.api.model.OperationType;
import io.ownera.ledger.adapter.api.model.ProofPolicy;
import io.ownera.ledger.adapter.api.model.ReceiptTradeDetails;
import io.ownera.ledger.adapter.api.model.Source;
import io.ownera.ledger.adapter.api.model.TransactionDetails;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * Receipt
 */
@JsonPropertyOrder({
  Receipt.JSON_PROPERTY_ID,
  Receipt.JSON_PROPERTY_ASSET,
  Receipt.JSON_PROPERTY_QUANTITY,
  Receipt.JSON_PROPERTY_TIMESTAMP,
  Receipt.JSON_PROPERTY_SOURCE,
  Receipt.JSON_PROPERTY_DESTINATION,
  Receipt.JSON_PROPERTY_TRANSACTION_DETAILS,
  Receipt.JSON_PROPERTY_OPERATION_TYPE,
  Receipt.JSON_PROPERTY_TRADE_DETAILS,
  Receipt.JSON_PROPERTY_PROOF
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-23T11:29:49.092442+03:00[Asia/Jerusalem]", comments = "Generator version: 7.9.0")
public class Receipt {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ASSET = "asset";
  private Asset asset;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private String quantity;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private Long timestamp;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private Source source;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private Destination destination;

  public static final String JSON_PROPERTY_TRANSACTION_DETAILS = "transactionDetails";
  private TransactionDetails transactionDetails;

  public static final String JSON_PROPERTY_OPERATION_TYPE = "operationType";
  private OperationType operationType;

  public static final String JSON_PROPERTY_TRADE_DETAILS = "tradeDetails";
  private ReceiptTradeDetails tradeDetails;

  public static final String JSON_PROPERTY_PROOF = "proof";
  private ProofPolicy proof;

  public Receipt() { 
  }

  public Receipt id(String id) {
    this.id = id;
    return this;
  }

  /**
   * the receipt id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Receipt asset(Asset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Asset getAsset() {
    return asset;
  }


  @JsonProperty(JSON_PROPERTY_ASSET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsset(Asset asset) {
    this.asset = asset;
  }


  public Receipt quantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * How many units of the asset tokens
   * @return quantity
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }


  public Receipt timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * transaction timestamp
   * @return timestamp
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }


  public Receipt source(Source source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Source getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(Source source) {
    this.source = source;
  }


  public Receipt destination(Destination destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Destination getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestination(Destination destination) {
    this.destination = destination;
  }


  public Receipt transactionDetails(TransactionDetails transactionDetails) {
    this.transactionDetails = transactionDetails;
    return this;
  }

  /**
   * Get transactionDetails
   * @return transactionDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TransactionDetails getTransactionDetails() {
    return transactionDetails;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionDetails(TransactionDetails transactionDetails) {
    this.transactionDetails = transactionDetails;
  }


  public Receipt operationType(OperationType operationType) {
    this.operationType = operationType;
    return this;
  }

  /**
   * Get operationType
   * @return operationType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OperationType getOperationType() {
    return operationType;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperationType(OperationType operationType) {
    this.operationType = operationType;
  }


  public Receipt tradeDetails(ReceiptTradeDetails tradeDetails) {
    this.tradeDetails = tradeDetails;
    return this;
  }

  /**
   * Get tradeDetails
   * @return tradeDetails
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRADE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ReceiptTradeDetails getTradeDetails() {
    return tradeDetails;
  }


  @JsonProperty(JSON_PROPERTY_TRADE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTradeDetails(ReceiptTradeDetails tradeDetails) {
    this.tradeDetails = tradeDetails;
  }


  public Receipt proof(ProofPolicy proof) {
    this.proof = proof;
    return this;
  }

  /**
   * Get proof
   * @return proof
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROOF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ProofPolicy getProof() {
    return proof;
  }


  @JsonProperty(JSON_PROPERTY_PROOF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProof(ProofPolicy proof) {
    this.proof = proof;
  }


  /**
   * Return true if this receipt object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Receipt receipt = (Receipt) o;
    return Objects.equals(this.id, receipt.id) &&
        Objects.equals(this.asset, receipt.asset) &&
        Objects.equals(this.quantity, receipt.quantity) &&
        Objects.equals(this.timestamp, receipt.timestamp) &&
        Objects.equals(this.source, receipt.source) &&
        Objects.equals(this.destination, receipt.destination) &&
        Objects.equals(this.transactionDetails, receipt.transactionDetails) &&
        Objects.equals(this.operationType, receipt.operationType) &&
        Objects.equals(this.tradeDetails, receipt.tradeDetails) &&
        Objects.equals(this.proof, receipt.proof);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, asset, quantity, timestamp, source, destination, transactionDetails, operationType, tradeDetails, proof);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Receipt {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    transactionDetails: ").append(toIndentedString(transactionDetails)).append("\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    tradeDetails: ").append(toIndentedString(tradeDetails)).append("\n");
    sb.append("    proof: ").append(toIndentedString(proof)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `asset` to the URL query string
    if (getAsset() != null) {
      joiner.add(getAsset().toUrlQueryString(prefix + "asset" + suffix));
    }

    // add `quantity` to the URL query string
    if (getQuantity() != null) {
      joiner.add(String.format("%squantity%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getQuantity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timestamp` to the URL query string
    if (getTimestamp() != null) {
      joiner.add(String.format("%stimestamp%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTimestamp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `source` to the URL query string
    if (getSource() != null) {
      joiner.add(getSource().toUrlQueryString(prefix + "source" + suffix));
    }

    // add `destination` to the URL query string
    if (getDestination() != null) {
      joiner.add(getDestination().toUrlQueryString(prefix + "destination" + suffix));
    }

    // add `transactionDetails` to the URL query string
    if (getTransactionDetails() != null) {
      joiner.add(getTransactionDetails().toUrlQueryString(prefix + "transactionDetails" + suffix));
    }

    // add `operationType` to the URL query string
    if (getOperationType() != null) {
      joiner.add(String.format("%soperationType%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getOperationType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tradeDetails` to the URL query string
    if (getTradeDetails() != null) {
      joiner.add(getTradeDetails().toUrlQueryString(prefix + "tradeDetails" + suffix));
    }

    // add `proof` to the URL query string
    if (getProof() != null) {
      joiner.add(getProof().toUrlQueryString(prefix + "proof" + suffix));
    }

    return joiner.toString();
  }
}

