/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIDestination;
import io.ownera.ledger.adapter.api.model.APIPaymentMethod;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APIDepositInstruction
 */
@JsonPropertyOrder({
  APIDepositInstruction.JSON_PROPERTY_ACCOUNT,
  APIDepositInstruction.JSON_PROPERTY_DESCRIPTION,
  APIDepositInstruction.JSON_PROPERTY_PAYMENT_OPTIONS,
  APIDepositInstruction.JSON_PROPERTY_DETAILS,
  APIDepositInstruction.JSON_PROPERTY_OPERATION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-29T09:36:31.082697+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APIDepositInstruction {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  @javax.annotation.Nonnull
  private APIDestination account;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_PAYMENT_OPTIONS = "paymentOptions";
  @javax.annotation.Nullable
  private List<APIPaymentMethod> paymentOptions = new ArrayList<>();

  public static final String JSON_PROPERTY_DETAILS = "details";
  @javax.annotation.Nullable
  private Object details;

  public static final String JSON_PROPERTY_OPERATION_ID = "operationId";
  @javax.annotation.Nullable
  private String operationId;

  public APIDepositInstruction() { 
  }

  public APIDepositInstruction account(@javax.annotation.Nonnull APIDestination account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ACCOUNT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public APIDestination getAccount() {
    return account;
  }


  @JsonProperty(value = JSON_PROPERTY_ACCOUNT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(@javax.annotation.Nonnull APIDestination account) {
    this.account = account;
  }


  public APIDepositInstruction description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Instructions for the deposit operation
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public APIDepositInstruction paymentOptions(@javax.annotation.Nullable List<APIPaymentMethod> paymentOptions) {
    this.paymentOptions = paymentOptions;
    return this;
  }

  public APIDepositInstruction addPaymentOptionsItem(APIPaymentMethod paymentOptionsItem) {
    if (this.paymentOptions == null) {
      this.paymentOptions = new ArrayList<>();
    }
    this.paymentOptions.add(paymentOptionsItem);
    return this;
  }

  /**
   * Get paymentOptions
   * @return paymentOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PAYMENT_OPTIONS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<APIPaymentMethod> getPaymentOptions() {
    return paymentOptions;
  }


  @JsonProperty(value = JSON_PROPERTY_PAYMENT_OPTIONS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentOptions(@javax.annotation.Nullable List<APIPaymentMethod> paymentOptions) {
    this.paymentOptions = paymentOptions;
  }


  public APIDepositInstruction details(@javax.annotation.Nullable Object details) {
    this.details = details;
    return this;
  }

  /**
   * Any addition deposit specific information, deprecated use \&quot;payment method options\&quot; instead fields
   * @return details
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getDetails() {
    return details;
  }


  @JsonProperty(value = JSON_PROPERTY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable Object details) {
    this.details = details;
  }


  public APIDepositInstruction operationId(@javax.annotation.Nullable String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * operation id reference while will correlate with any receipt associated with the deposit operation
   * @return operationId
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_OPERATION_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOperationId() {
    return operationId;
  }


  @JsonProperty(value = JSON_PROPERTY_OPERATION_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperationId(@javax.annotation.Nullable String operationId) {
    this.operationId = operationId;
  }


  /**
   * Return true if this depositInstruction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIDepositInstruction depositInstruction = (APIDepositInstruction) o;
    return Objects.equals(this.account, depositInstruction.account) &&
        Objects.equals(this.description, depositInstruction.description) &&
        Objects.equals(this.paymentOptions, depositInstruction.paymentOptions) &&
        Objects.equals(this.details, depositInstruction.details) &&
        Objects.equals(this.operationId, depositInstruction.operationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, description, paymentOptions, details, operationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIDepositInstruction {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    paymentOptions: ").append(toIndentedString(paymentOptions)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `account` to the URL query string
    if (getAccount() != null) {
      joiner.add(getAccount().toUrlQueryString(prefix + "account" + suffix));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format(Locale.ROOT, "%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `paymentOptions` to the URL query string
    if (getPaymentOptions() != null) {
      for (int i = 0; i < getPaymentOptions().size(); i++) {
        if (getPaymentOptions().get(i) != null) {
          joiner.add(getPaymentOptions().get(i).toUrlQueryString(String.format(Locale.ROOT, "%spaymentOptions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format(Locale.ROOT, "%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `details` to the URL query string
    if (getDetails() != null) {
      joiner.add(String.format(Locale.ROOT, "%sdetails%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDetails()))));
    }

    // add `operationId` to the URL query string
    if (getOperationId() != null) {
      joiner.add(String.format(Locale.ROOT, "%soperationId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOperationId()))));
    }

    return joiner.toString();
  }
}

