/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIFinIdAccount;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APISource
 */
@JsonPropertyOrder({
  APISource.JSON_PROPERTY_FIN_ID,
  APISource.JSON_PROPERTY_ACCOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-28T10:24:19.848612+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APISource {
  public static final String JSON_PROPERTY_FIN_ID = "finId";
  @javax.annotation.Nonnull
  private String finId;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  @javax.annotation.Nonnull
  private APIFinIdAccount account;

  public APISource() { 
  }

  public APISource finId(@javax.annotation.Nonnull String finId) {
    this.finId = finId;
    return this;
  }

  /**
   * FinID, public key of the user
   * @return finId
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_FIN_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFinId() {
    return finId;
  }


  @JsonProperty(value = JSON_PROPERTY_FIN_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFinId(@javax.annotation.Nonnull String finId) {
    this.finId = finId;
  }


  public APISource account(@javax.annotation.Nonnull APIFinIdAccount account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ACCOUNT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public APIFinIdAccount getAccount() {
    return account;
  }


  @JsonProperty(value = JSON_PROPERTY_ACCOUNT, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(@javax.annotation.Nonnull APIFinIdAccount account) {
    this.account = account;
  }


  /**
   * Return true if this source object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APISource source = (APISource) o;
    return Objects.equals(this.finId, source.finId) &&
        Objects.equals(this.account, source.account);
  }

  @Override
  public int hashCode() {
    return Objects.hash(finId, account);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APISource {\n");
    sb.append("    finId: ").append(toIndentedString(finId)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `finId` to the URL query string
    if (getFinId() != null) {
      joiner.add(String.format(Locale.ROOT, "%sfinId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFinId()))));
    }

    // add `account` to the URL query string
    if (getAccount() != null) {
      joiner.add(getAccount().toUrlQueryString(prefix + "account" + suffix));
    }

    return joiner.toString();
  }
}

