/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIFinP2PEVMOperatorDetails;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APIContractDetails
 */
@JsonPropertyOrder({
  APIContractDetails.JSON_PROPERTY_TYPE,
  APIContractDetails.JSON_PROPERTY_NETWORK,
  APIContractDetails.JSON_PROPERTY_ADDRESS,
  APIContractDetails.JSON_PROPERTY_TOKEN_STANDARD,
  APIContractDetails.JSON_PROPERTY_ADDITIONAL_CONTRACT_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-28T10:24:19.848612+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APIContractDetails {
  /**
   * the type of the identifier
   */
  public enum TypeEnum {
    CONTRACT_DETAILS(String.valueOf("contractDetails"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_NETWORK = "network";
  @javax.annotation.Nonnull
  private String network;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @javax.annotation.Nonnull
  private String address;

  public static final String JSON_PROPERTY_TOKEN_STANDARD = "TokenStandard";
  @javax.annotation.Nullable
  private String tokenStandard;

  public static final String JSON_PROPERTY_ADDITIONAL_CONTRACT_DETAILS = "additionalContractDetails";
  @javax.annotation.Nullable
  private APIFinP2PEVMOperatorDetails additionalContractDetails;

  public APIContractDetails() { 
  }

  public APIContractDetails type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * the type of the identifier
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public APIContractDetails network(@javax.annotation.Nonnull String network) {
    this.network = network;
    return this;
  }

  /**
   * the network
   * @return network
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_NETWORK, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getNetwork() {
    return network;
  }


  @JsonProperty(value = JSON_PROPERTY_NETWORK, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetwork(@javax.annotation.Nonnull String network) {
    this.network = network;
  }


  public APIContractDetails address(@javax.annotation.Nonnull String address) {
    this.address = address;
    return this;
  }

  /**
   * the address
   * @return address
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ADDRESS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAddress() {
    return address;
  }


  @JsonProperty(value = JSON_PROPERTY_ADDRESS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(@javax.annotation.Nonnull String address) {
    this.address = address;
  }


  public APIContractDetails tokenStandard(@javax.annotation.Nullable String tokenStandard) {
    this.tokenStandard = tokenStandard;
    return this;
  }

  /**
   * The standard of the token (e.g., ERC20, ERC721)
   * @return tokenStandard
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TOKEN_STANDARD, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTokenStandard() {
    return tokenStandard;
  }


  @JsonProperty(value = JSON_PROPERTY_TOKEN_STANDARD, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenStandard(@javax.annotation.Nullable String tokenStandard) {
    this.tokenStandard = tokenStandard;
  }


  public APIContractDetails additionalContractDetails(@javax.annotation.Nullable APIFinP2PEVMOperatorDetails additionalContractDetails) {
    this.additionalContractDetails = additionalContractDetails;
    return this;
  }

  /**
   * Get additionalContractDetails
   * @return additionalContractDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ADDITIONAL_CONTRACT_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public APIFinP2PEVMOperatorDetails getAdditionalContractDetails() {
    return additionalContractDetails;
  }


  @JsonProperty(value = JSON_PROPERTY_ADDITIONAL_CONTRACT_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalContractDetails(@javax.annotation.Nullable APIFinP2PEVMOperatorDetails additionalContractDetails) {
    this.additionalContractDetails = additionalContractDetails;
  }


  /**
   * Return true if this contractDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIContractDetails contractDetails = (APIContractDetails) o;
    return Objects.equals(this.type, contractDetails.type) &&
        Objects.equals(this.network, contractDetails.network) &&
        Objects.equals(this.address, contractDetails.address) &&
        Objects.equals(this.tokenStandard, contractDetails.tokenStandard) &&
        Objects.equals(this.additionalContractDetails, contractDetails.additionalContractDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, network, address, tokenStandard, additionalContractDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIContractDetails {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    tokenStandard: ").append(toIndentedString(tokenStandard)).append("\n");
    sb.append("    additionalContractDetails: ").append(toIndentedString(additionalContractDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format(Locale.ROOT, "%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `network` to the URL query string
    if (getNetwork() != null) {
      joiner.add(String.format(Locale.ROOT, "%snetwork%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNetwork()))));
    }

    // add `address` to the URL query string
    if (getAddress() != null) {
      joiner.add(String.format(Locale.ROOT, "%saddress%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAddress()))));
    }

    // add `TokenStandard` to the URL query string
    if (getTokenStandard() != null) {
      joiner.add(String.format(Locale.ROOT, "%sTokenStandard%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTokenStandard()))));
    }

    // add `additionalContractDetails` to the URL query string
    if (getAdditionalContractDetails() != null) {
      joiner.add(getAdditionalContractDetails().toUrlQueryString(prefix + "additionalContractDetails" + suffix));
    }

    return joiner.toString();
  }
}

