/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.DepositAsset;
import io.ownera.ledger.adapter.api.model.Destination;
import io.ownera.ledger.adapter.api.model.Signature;
import io.ownera.ledger.adapter.api.model.Source;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * DepositInstructionRequest
 */
@JsonPropertyOrder({
  DepositInstructionRequest.JSON_PROPERTY_DESTINATION,
  DepositInstructionRequest.JSON_PROPERTY_OWNER,
  DepositInstructionRequest.JSON_PROPERTY_ASSET,
  DepositInstructionRequest.JSON_PROPERTY_AMOUNT,
  DepositInstructionRequest.JSON_PROPERTY_DETAILS,
  DepositInstructionRequest.JSON_PROPERTY_NONCE,
  DepositInstructionRequest.JSON_PROPERTY_SIGNATURE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-27T09:27:05.154160+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class DepositInstructionRequest {
  public static final String JSON_PROPERTY_DESTINATION = "destination";
  @javax.annotation.Nonnull
  private Destination destination;

  public static final String JSON_PROPERTY_OWNER = "owner";
  @javax.annotation.Nonnull
  private Source owner;

  public static final String JSON_PROPERTY_ASSET = "asset";
  @javax.annotation.Nonnull
  private DepositAsset asset;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private String amount;

  public static final String JSON_PROPERTY_DETAILS = "details";
  @javax.annotation.Nullable
  private Object details;

  public static final String JSON_PROPERTY_NONCE = "nonce";
  @javax.annotation.Nullable
  private String nonce;

  public static final String JSON_PROPERTY_SIGNATURE = "signature";
  @javax.annotation.Nullable
  private Signature signature;

  public DepositInstructionRequest() { 
  }

  public DepositInstructionRequest destination(@javax.annotation.Nonnull Destination destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DESTINATION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Destination getDestination() {
    return destination;
  }


  @JsonProperty(value = JSON_PROPERTY_DESTINATION, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(@javax.annotation.Nonnull Destination destination) {
    this.destination = destination;
  }


  public DepositInstructionRequest owner(@javax.annotation.Nonnull Source owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_OWNER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Source getOwner() {
    return owner;
  }


  @JsonProperty(value = JSON_PROPERTY_OWNER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwner(@javax.annotation.Nonnull Source owner) {
    this.owner = owner;
  }


  public DepositInstructionRequest asset(@javax.annotation.Nonnull DepositAsset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ASSET, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public DepositAsset getAsset() {
    return asset;
  }


  @JsonProperty(value = JSON_PROPERTY_ASSET, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsset(@javax.annotation.Nonnull DepositAsset asset) {
    this.asset = asset;
  }


  public DepositInstructionRequest amount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Amount to deposit
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_AMOUNT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAmount() {
    return amount;
  }


  @JsonProperty(value = JSON_PROPERTY_AMOUNT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
  }


  public DepositInstructionRequest details(@javax.annotation.Nullable Object details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getDetails() {
    return details;
  }


  @JsonProperty(value = JSON_PROPERTY_DETAILS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable Object details) {
    this.details = details;
  }


  public DepositInstructionRequest nonce(@javax.annotation.Nullable String nonce) {
    this.nonce = nonce;
    return this;
  }

  /**
   * 32 bytes buffer (24 randomly generated bytes by the client + 8 bytes epoch timestamp seconds) encoded to hex:    const nonce &#x3D; Buffer.alloc(32);   nonce.fill(crypto.randomBytes(24), 0, 24);    const nowEpochSeconds &#x3D; Math.floor(new Date().getTime() / 1000);   const t &#x3D; BigInt(nowEpochSeconds);   nonce.writeBigInt64BE(t, 24); 
   * @return nonce
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_NONCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNonce() {
    return nonce;
  }


  @JsonProperty(value = JSON_PROPERTY_NONCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonce(@javax.annotation.Nullable String nonce) {
    this.nonce = nonce;
  }


  public DepositInstructionRequest signature(@javax.annotation.Nullable Signature signature) {
    this.signature = signature;
    return this;
  }

  /**
   * Get signature
   * @return signature
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SIGNATURE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Signature getSignature() {
    return signature;
  }


  @JsonProperty(value = JSON_PROPERTY_SIGNATURE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignature(@javax.annotation.Nullable Signature signature) {
    this.signature = signature;
  }


  /**
   * Return true if this DepositInstructionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositInstructionRequest depositInstructionRequest = (DepositInstructionRequest) o;
    return Objects.equals(this.destination, depositInstructionRequest.destination) &&
        Objects.equals(this.owner, depositInstructionRequest.owner) &&
        Objects.equals(this.asset, depositInstructionRequest.asset) &&
        Objects.equals(this.amount, depositInstructionRequest.amount) &&
        Objects.equals(this.details, depositInstructionRequest.details) &&
        Objects.equals(this.nonce, depositInstructionRequest.nonce) &&
        Objects.equals(this.signature, depositInstructionRequest.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destination, owner, asset, amount, details, nonce, signature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositInstructionRequest {\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `destination` to the URL query string
    if (getDestination() != null) {
      joiner.add(getDestination().toUrlQueryString(prefix + "destination" + suffix));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(getOwner().toUrlQueryString(prefix + "owner" + suffix));
    }

    // add `asset` to the URL query string
    if (getAsset() != null) {
      joiner.add(getAsset().toUrlQueryString(prefix + "asset" + suffix));
    }

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format(Locale.ROOT, "%samount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
    }

    // add `details` to the URL query string
    if (getDetails() != null) {
      joiner.add(String.format(Locale.ROOT, "%sdetails%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDetails()))));
    }

    // add `nonce` to the URL query string
    if (getNonce() != null) {
      joiner.add(String.format(Locale.ROOT, "%snonce%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNonce()))));
    }

    // add `signature` to the URL query string
    if (getSignature() != null) {
      joiner.add(getSignature().toUrlQueryString(prefix + "signature" + suffix));
    }

    return joiner.toString();
  }
}

