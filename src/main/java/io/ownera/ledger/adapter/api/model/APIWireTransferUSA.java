/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APIWireTransferUSA
 */
@JsonPropertyOrder({
  APIWireTransferUSA.JSON_PROPERTY_TYPE,
  APIWireTransferUSA.JSON_PROPERTY_ACCOUNT_NUMBER,
  APIWireTransferUSA.JSON_PROPERTY_ROUTING_NUMBER,
  APIWireTransferUSA.JSON_PROPERTY_LINE1,
  APIWireTransferUSA.JSON_PROPERTY_CITY,
  APIWireTransferUSA.JSON_PROPERTY_POSTAL_CODE,
  APIWireTransferUSA.JSON_PROPERTY_COUNTRY,
  APIWireTransferUSA.JSON_PROPERTY_STATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-28T10:24:19.848612+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APIWireTransferUSA {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    WIRE_TRANSFER_USA(String.valueOf("wireTransferUSA"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_ACCOUNT_NUMBER = "accountNumber";
  @javax.annotation.Nonnull
  private String accountNumber;

  public static final String JSON_PROPERTY_ROUTING_NUMBER = "routingNumber";
  @javax.annotation.Nonnull
  private String routingNumber;

  public static final String JSON_PROPERTY_LINE1 = "line1";
  @javax.annotation.Nullable
  private String line1;

  public static final String JSON_PROPERTY_CITY = "city";
  @javax.annotation.Nullable
  private String city;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  @javax.annotation.Nullable
  private String postalCode;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nullable
  private String country;

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nullable
  private String state;

  public APIWireTransferUSA() { 
  }

  public APIWireTransferUSA type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public APIWireTransferUSA accountNumber(@javax.annotation.Nonnull String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  /**
   * Get accountNumber
   * @return accountNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ACCOUNT_NUMBER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAccountNumber() {
    return accountNumber;
  }


  @JsonProperty(value = JSON_PROPERTY_ACCOUNT_NUMBER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountNumber(@javax.annotation.Nonnull String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public APIWireTransferUSA routingNumber(@javax.annotation.Nonnull String routingNumber) {
    this.routingNumber = routingNumber;
    return this;
  }

  /**
   * Get routingNumber
   * @return routingNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ROUTING_NUMBER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getRoutingNumber() {
    return routingNumber;
  }


  @JsonProperty(value = JSON_PROPERTY_ROUTING_NUMBER, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoutingNumber(@javax.annotation.Nonnull String routingNumber) {
    this.routingNumber = routingNumber;
  }


  public APIWireTransferUSA line1(@javax.annotation.Nullable String line1) {
    this.line1 = line1;
    return this;
  }

  /**
   * Get line1
   * @return line1
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LINE1, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLine1() {
    return line1;
  }


  @JsonProperty(value = JSON_PROPERTY_LINE1, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLine1(@javax.annotation.Nullable String line1) {
    this.line1 = line1;
  }


  public APIWireTransferUSA city(@javax.annotation.Nullable String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCity() {
    return city;
  }


  @JsonProperty(value = JSON_PROPERTY_CITY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }


  public APIWireTransferUSA postalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_POSTAL_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(value = JSON_PROPERTY_POSTAL_CODE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
  }


  public APIWireTransferUSA country(@javax.annotation.Nullable String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_COUNTRY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCountry() {
    return country;
  }


  @JsonProperty(value = JSON_PROPERTY_COUNTRY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }


  public APIWireTransferUSA state(@javax.annotation.Nullable String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_STATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getState() {
    return state;
  }


  @JsonProperty(value = JSON_PROPERTY_STATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@javax.annotation.Nullable String state) {
    this.state = state;
  }


  /**
   * Return true if this wireTransferUSA object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIWireTransferUSA wireTransferUSA = (APIWireTransferUSA) o;
    return Objects.equals(this.type, wireTransferUSA.type) &&
        Objects.equals(this.accountNumber, wireTransferUSA.accountNumber) &&
        Objects.equals(this.routingNumber, wireTransferUSA.routingNumber) &&
        Objects.equals(this.line1, wireTransferUSA.line1) &&
        Objects.equals(this.city, wireTransferUSA.city) &&
        Objects.equals(this.postalCode, wireTransferUSA.postalCode) &&
        Objects.equals(this.country, wireTransferUSA.country) &&
        Objects.equals(this.state, wireTransferUSA.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, accountNumber, routingNumber, line1, city, postalCode, country, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIWireTransferUSA {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    routingNumber: ").append(toIndentedString(routingNumber)).append("\n");
    sb.append("    line1: ").append(toIndentedString(line1)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format(Locale.ROOT, "%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `accountNumber` to the URL query string
    if (getAccountNumber() != null) {
      joiner.add(String.format(Locale.ROOT, "%saccountNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccountNumber()))));
    }

    // add `routingNumber` to the URL query string
    if (getRoutingNumber() != null) {
      joiner.add(String.format(Locale.ROOT, "%sroutingNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRoutingNumber()))));
    }

    // add `line1` to the URL query string
    if (getLine1() != null) {
      joiner.add(String.format(Locale.ROOT, "%sline1%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLine1()))));
    }

    // add `city` to the URL query string
    if (getCity() != null) {
      joiner.add(String.format(Locale.ROOT, "%scity%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCity()))));
    }

    // add `postalCode` to the URL query string
    if (getPostalCode() != null) {
      joiner.add(String.format(Locale.ROOT, "%spostalCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPostalCode()))));
    }

    // add `country` to the URL query string
    if (getCountry() != null) {
      joiner.add(String.format(Locale.ROOT, "%scountry%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
    }

    // add `state` to the URL query string
    if (getState() != null) {
      joiner.add(String.format(Locale.ROOT, "%sstate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getState()))));
    }

    return joiner.toString();
  }
}

