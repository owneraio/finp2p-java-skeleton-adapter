/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P node will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * EIP712Domain
 */
@JsonPropertyOrder({
  EIP712Domain.JSON_PROPERTY_NAME,
  EIP712Domain.JSON_PROPERTY_VERSION,
  EIP712Domain.JSON_PROPERTY_CHAIN_ID,
  EIP712Domain.JSON_PROPERTY_VERIFYING_CONTRACT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-23T11:29:49.092442+03:00[Asia/Jerusalem]", comments = "Generator version: 7.9.0")
public class EIP712Domain {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_CHAIN_ID = "chainId";
  private Integer chainId;

  public static final String JSON_PROPERTY_VERIFYING_CONTRACT = "verifyingContract";
  private String verifyingContract;

  public EIP712Domain() { 
  }

  public EIP712Domain name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public EIP712Domain version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public EIP712Domain chainId(Integer chainId) {
    this.chainId = chainId;
    return this;
  }

  /**
   * Get chainId
   * @return chainId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getChainId() {
    return chainId;
  }


  @JsonProperty(JSON_PROPERTY_CHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChainId(Integer chainId) {
    this.chainId = chainId;
  }


  public EIP712Domain verifyingContract(String verifyingContract) {
    this.verifyingContract = verifyingContract;
    return this;
  }

  /**
   * Get verifyingContract
   * @return verifyingContract
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFYING_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getVerifyingContract() {
    return verifyingContract;
  }


  @JsonProperty(JSON_PROPERTY_VERIFYING_CONTRACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifyingContract(String verifyingContract) {
    this.verifyingContract = verifyingContract;
  }


  /**
   * Return true if this EIP712Domain object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EIP712Domain eiP712Domain = (EIP712Domain) o;
    return Objects.equals(this.name, eiP712Domain.name) &&
        Objects.equals(this.version, eiP712Domain.version) &&
        Objects.equals(this.chainId, eiP712Domain.chainId) &&
        Objects.equals(this.verifyingContract, eiP712Domain.verifyingContract);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, version, chainId, verifyingContract);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EIP712Domain {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("    verifyingContract: ").append(toIndentedString(verifyingContract)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(String.format("%sversion%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `chainId` to the URL query string
    if (getChainId() != null) {
      joiner.add(String.format("%schainId%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getChainId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `verifyingContract` to the URL query string
    if (getVerifyingContract() != null) {
      joiner.add(String.format("%sverifyingContract%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVerifyingContract()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

