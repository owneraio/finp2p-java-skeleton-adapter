/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIAsset;
import io.ownera.ledger.adapter.api.model.APIAssetDenomination;
import io.ownera.ledger.adapter.api.model.APIAssetIdentifier;
import io.ownera.ledger.adapter.api.model.APILedgerTokenId;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APICreateAssetRequest
 */
@JsonPropertyOrder({
  APICreateAssetRequest.JSON_PROPERTY_METADATA,
  APICreateAssetRequest.JSON_PROPERTY_ASSET,
  APICreateAssetRequest.JSON_PROPERTY_LEDGER_ASSET_BINDING,
  APICreateAssetRequest.JSON_PROPERTY_NAME,
  APICreateAssetRequest.JSON_PROPERTY_ISSUER_ID,
  APICreateAssetRequest.JSON_PROPERTY_DENOMINATION,
  APICreateAssetRequest.JSON_PROPERTY_ASSET_IDENTIFIER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-29T09:36:31.082697+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APICreateAssetRequest {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private Map<String, Object> metadata = new HashMap<>();

  public static final String JSON_PROPERTY_ASSET = "asset";
  @javax.annotation.Nonnull
  private APIAsset asset;

  public static final String JSON_PROPERTY_LEDGER_ASSET_BINDING = "ledgerAssetBinding";
  @javax.annotation.Nullable
  private APILedgerTokenId ledgerAssetBinding;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_ISSUER_ID = "issuerId";
  @javax.annotation.Nullable
  private String issuerId;

  public static final String JSON_PROPERTY_DENOMINATION = "denomination";
  @javax.annotation.Nullable
  private APIAssetDenomination denomination;

  public static final String JSON_PROPERTY_ASSET_IDENTIFIER = "assetIdentifier";
  @javax.annotation.Nullable
  private APIAssetIdentifier assetIdentifier;

  public APICreateAssetRequest() { 
  }

  public APICreateAssetRequest metadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
    return this;
  }

  public APICreateAssetRequest putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * The asset metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_METADATA, required = false)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getMetadata() {
    return metadata;
  }


  @JsonProperty(value = JSON_PROPERTY_METADATA, required = false)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public APICreateAssetRequest asset(@javax.annotation.Nonnull APIAsset asset) {
    this.asset = asset;
    return this;
  }

  /**
   * Get asset
   * @return asset
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ASSET, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public APIAsset getAsset() {
    return asset;
  }


  @JsonProperty(value = JSON_PROPERTY_ASSET, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAsset(@javax.annotation.Nonnull APIAsset asset) {
    this.asset = asset;
  }


  public APICreateAssetRequest ledgerAssetBinding(@javax.annotation.Nullable APILedgerTokenId ledgerAssetBinding) {
    this.ledgerAssetBinding = ledgerAssetBinding;
    return this;
  }

  /**
   * Get ledgerAssetBinding
   * @return ledgerAssetBinding
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LEDGER_ASSET_BINDING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public APILedgerTokenId getLedgerAssetBinding() {
    return ledgerAssetBinding;
  }


  @JsonProperty(value = JSON_PROPERTY_LEDGER_ASSET_BINDING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLedgerAssetBinding(@javax.annotation.Nullable APILedgerTokenId ledgerAssetBinding) {
    this.ledgerAssetBinding = ledgerAssetBinding;
  }


  public APICreateAssetRequest name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the asset
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public APICreateAssetRequest issuerId(@javax.annotation.Nullable String issuerId) {
    this.issuerId = issuerId;
    return this;
  }

  /**
   * Owner resource id
   * @return issuerId
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ISSUER_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIssuerId() {
    return issuerId;
  }


  @JsonProperty(value = JSON_PROPERTY_ISSUER_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerId(@javax.annotation.Nullable String issuerId) {
    this.issuerId = issuerId;
  }


  public APICreateAssetRequest denomination(@javax.annotation.Nullable APIAssetDenomination denomination) {
    this.denomination = denomination;
    return this;
  }

  /**
   * Get denomination
   * @return denomination
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DENOMINATION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public APIAssetDenomination getDenomination() {
    return denomination;
  }


  @JsonProperty(value = JSON_PROPERTY_DENOMINATION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDenomination(@javax.annotation.Nullable APIAssetDenomination denomination) {
    this.denomination = denomination;
  }


  public APICreateAssetRequest assetIdentifier(@javax.annotation.Nullable APIAssetIdentifier assetIdentifier) {
    this.assetIdentifier = assetIdentifier;
    return this;
  }

  /**
   * Get assetIdentifier
   * @return assetIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ASSET_IDENTIFIER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public APIAssetIdentifier getAssetIdentifier() {
    return assetIdentifier;
  }


  @JsonProperty(value = JSON_PROPERTY_ASSET_IDENTIFIER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetIdentifier(@javax.annotation.Nullable APIAssetIdentifier assetIdentifier) {
    this.assetIdentifier = assetIdentifier;
  }


  /**
   * Return true if this CreateAssetRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APICreateAssetRequest createAssetRequest = (APICreateAssetRequest) o;
    return Objects.equals(this.metadata, createAssetRequest.metadata) &&
        Objects.equals(this.asset, createAssetRequest.asset) &&
        Objects.equals(this.ledgerAssetBinding, createAssetRequest.ledgerAssetBinding) &&
        Objects.equals(this.name, createAssetRequest.name) &&
        Objects.equals(this.issuerId, createAssetRequest.issuerId) &&
        Objects.equals(this.denomination, createAssetRequest.denomination) &&
        Objects.equals(this.assetIdentifier, createAssetRequest.assetIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, asset, ledgerAssetBinding, name, issuerId, denomination, assetIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APICreateAssetRequest {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    ledgerAssetBinding: ").append(toIndentedString(ledgerAssetBinding)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    issuerId: ").append(toIndentedString(issuerId)).append("\n");
    sb.append("    denomination: ").append(toIndentedString(denomination)).append("\n");
    sb.append("    assetIdentifier: ").append(toIndentedString(assetIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      for (String _key : getMetadata().keySet()) {
        joiner.add(String.format(Locale.ROOT, "%smetadata%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format(Locale.ROOT, "%s%d%s", containerPrefix, _key, containerSuffix),
            getMetadata().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getMetadata().get(_key)))));
      }
    }

    // add `asset` to the URL query string
    if (getAsset() != null) {
      joiner.add(getAsset().toUrlQueryString(prefix + "asset" + suffix));
    }

    // add `ledgerAssetBinding` to the URL query string
    if (getLedgerAssetBinding() != null) {
      joiner.add(getLedgerAssetBinding().toUrlQueryString(prefix + "ledgerAssetBinding" + suffix));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format(Locale.ROOT, "%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `issuerId` to the URL query string
    if (getIssuerId() != null) {
      joiner.add(String.format(Locale.ROOT, "%sissuerId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIssuerId()))));
    }

    // add `denomination` to the URL query string
    if (getDenomination() != null) {
      joiner.add(getDenomination().toUrlQueryString(prefix + "denomination" + suffix));
    }

    // add `assetIdentifier` to the URL query string
    if (getAssetIdentifier() != null) {
      joiner.add(getAssetIdentifier().toUrlQueryString(prefix + "assetIdentifier" + suffix));
    }

    return joiner.toString();
  }
}

