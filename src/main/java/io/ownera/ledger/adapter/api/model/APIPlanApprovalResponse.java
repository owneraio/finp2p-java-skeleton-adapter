/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIPlanApprovalResponseApproval;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APIPlanApprovalResponse
 */
@JsonPropertyOrder({
  APIPlanApprovalResponse.JSON_PROPERTY_APPROVAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-28T10:24:19.848612+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APIPlanApprovalResponse {
  public static final String JSON_PROPERTY_APPROVAL = "approval";
  @javax.annotation.Nullable
  private APIPlanApprovalResponseApproval approval;

  public APIPlanApprovalResponse() { 
  }

  public APIPlanApprovalResponse approval(@javax.annotation.Nullable APIPlanApprovalResponseApproval approval) {
    this.approval = approval;
    return this;
  }

  /**
   * Get approval
   * @return approval
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_APPROVAL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public APIPlanApprovalResponseApproval getApproval() {
    return approval;
  }


  @JsonProperty(value = JSON_PROPERTY_APPROVAL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproval(@javax.annotation.Nullable APIPlanApprovalResponseApproval approval) {
    this.approval = approval;
  }


  /**
   * Return true if this PlanApprovalResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIPlanApprovalResponse planApprovalResponse = (APIPlanApprovalResponse) o;
    return Objects.equals(this.approval, planApprovalResponse.approval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approval);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIPlanApprovalResponse {\n");
    sb.append("    approval: ").append(toIndentedString(approval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `approval` to the URL query string
    if (getApproval() != null) {
      joiner.add(getApproval().toUrlQueryString(prefix + "approval" + suffix));
    }

    return joiner.toString();
  }
}

