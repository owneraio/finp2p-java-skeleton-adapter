/*
 * Ledger Adapter Specification
 * This is the API specification for the Ledger Adapter with whom the FinP2P Router will interact in order to execute and query the underlying implementation.
 *
 * The version of the OpenAPI document: x.x.x
 * Contact: support@ownera.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ownera.ledger.adapter.api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.ownera.ledger.adapter.api.model.APIEIP712TypeDefinition;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.ownera.ledger.adapter.api.ApiClient;
/**
 * APIEIP712Types
 */
@JsonPropertyOrder({
  APIEIP712Types.JSON_PROPERTY_DEFINITIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-29T09:36:31.082697+02:00[Asia/Jerusalem]", comments = "Generator version: 7.16.0")
public class APIEIP712Types {
  public static final String JSON_PROPERTY_DEFINITIONS = "definitions";
  @javax.annotation.Nonnull
  private List<APIEIP712TypeDefinition> definitions = new ArrayList<>();

  public APIEIP712Types() { 
  }

  public APIEIP712Types definitions(@javax.annotation.Nonnull List<APIEIP712TypeDefinition> definitions) {
    this.definitions = definitions;
    return this;
  }

  public APIEIP712Types addDefinitionsItem(APIEIP712TypeDefinition definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new ArrayList<>();
    }
    this.definitions.add(definitionsItem);
    return this;
  }

  /**
   * Get definitions
   * @return definitions
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DEFINITIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<APIEIP712TypeDefinition> getDefinitions() {
    return definitions;
  }


  @JsonProperty(value = JSON_PROPERTY_DEFINITIONS, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefinitions(@javax.annotation.Nonnull List<APIEIP712TypeDefinition> definitions) {
    this.definitions = definitions;
  }


  /**
   * Return true if this EIP712Types object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIEIP712Types eiP712Types = (APIEIP712Types) o;
    return Objects.equals(this.definitions, eiP712Types.definitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIEIP712Types {\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `definitions` to the URL query string
    if (getDefinitions() != null) {
      for (int i = 0; i < getDefinitions().size(); i++) {
        if (getDefinitions().get(i) != null) {
          joiner.add(getDefinitions().get(i).toUrlQueryString(String.format(Locale.ROOT, "%sdefinitions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format(Locale.ROOT, "%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

